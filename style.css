:root {
    --background: #141414;
    --card-bg: #313131;
    --primary: #3168E0;
    --calendar-bg: #C8A2D7;
    --task-bg: #d7be95;
    --text-primary: #FFFFFF;
    --text-secondary: #868686;
    --text-dark: #505050;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Encode Sans', sans-serif;
    background-color: var(--background);
    color: var(--text-primary);
    padding: 12px;
    max-width: 450px;
    margin: auto auto;
    display: flex;
    flex-direction: column;

}


/* header */

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.user-info {
    display: flex;
    align-items: center;
}
.user-info a{
    text-decoration: none;
    color: var(--text-primary);

}
.avatar {
    width: 35px;
    height: 35px;
    border-radius: 50px;
    object-fit: cover;

}
/* .avatar img {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    object-fit: cover;
    position: relative;
} */

.notification {
    width: 35px;
    height: 35px;
    background-color: var(--background);
    border: 1px solid #5F5F5F;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
}
.notification-icon {
    position: relative;
    display: inline-block;
}

h1 {
    font-size: 20px;
    font-weight: 500;
    margin-bottom: 10px;
    margin-left: 4px;
}


/* search bar */

.search-bar {
    background-color: var(--card-bg);
    border-radius: 10px;
    display: flex;
    align-items: center;
    padding: 10px;
    margin-bottom: 10px;
    height: 50px;
}

.search-bar input {
    background: none;
    border: none;
    color: var(--text-secondary);
    font-size: 14px;
    width: 100%;
    outline: none;
}


/* progress card */

.progress-card {
    background-color: var(--card-bg);
    border-radius: 10px;
    padding: 15px;
    margin-bottom: 10px;
}

.progress-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.progress-date {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--primary);
    color: var(--text-primary);
    padding: 6px 10px;
    border-radius: 5px;
    font-size: 14px;
    font-weight: 500;
    width: fit-content;
}

.progress-circle {
    position: relative;
    width: 70px;
    height: 70px;
}

.progress-circle svg {
    display: flex;
    justify-content: center;
    align-items: center;
    
    width: 100%;
    height: 100%;
    transform: rotate(-90deg); /* Rotate to start progress from the top */
}

circle {
    fill: none;
    stroke-width: 5;
}

circle.bg {
    stroke: #e6e6e6; /* Background circle color */
}

circle.progress {
    stroke: #4CAF50; /* Progress circle color */
    stroke-dasharray: 188.4; /* Circumference of the circle (2 * PI * radius) */
    stroke-dashoffset: 188.4; /* Hide the progress by default */
    transition: stroke-dashoffset 0.6s ease;
}

.progress-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 14px;
    font-weight: bold;
}


/* widgets */

.widgets {
    display: flex;
    gap: 10px;
}
.weather-calendar{
    display: flex;
    flex-direction: column;
    gap: 10px;
    flex: 1;
}

.calendar, .weather {
    border-radius: 18px;
    padding: 12px;
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 150px;
}

.calendar {
    background-color: var(--calendar-bg);
    color: var(--text-dark);
}

.weather {
    background-color: var(--card-bg);
}
.weather-details{
    display: flex;
    justify-content: space-between;
    flex-direction: column;
    gap: 2px;
    font-size: 12px;
}
#weather-icon{
    width: 16px;
    height: 16px;
    filter: invert(100%) brightness(100%);  /* Inverts the icon colors to make them white */
    margin-bottom: 3px;
}

.calendar #day {
    font-size: 3rem;
    font-weight: 600;
    color: var(--text-primary);

}

.calendar #date {
    font-size: 1rem;
    font-weight: 500;
    line-height: 1;
}

.tasks {
    background-color: var(--task-bg);
    border-radius: 18px;
    padding: 15px;
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 10px;
    justify-content: space-between;
    color: var(--text-secondary);
}
.task .task-list-ul {
    height: 200px;
    overflow: hidden;
}
#text {
    display: none;
}
.tasks .task-list {
    list-style-type: none;
    overflow: scroll;
    height: 200px;
}
.task-list .task-item {
    background-color: var(--card-bg);
    border-radius: 4px;
    color: var(--text-primary);
    padding: 5px 10px;
    margin-bottom: 8px;
    font-size: 14px;
    font-weight: 200;
}

.see-all-button {
    display: flex;
    justify-content: flex-end;
}
.see-all-button button {
    background-color: black;
    border-radius: 50px;
    width: 40px;
    height: 40px;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;


}


/* urgent task */

/* .urgent-tasks {
    margin-top: 20px;
}

.urgent-task-header{
    display: flex;
    flex-direction: column;
    gap: 5px;
}
.urgent-task {
    background-color: var(--card-bg);
    border-radius: 8px;
    padding: 10px;
    margin-bottom: 10px;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
} */

/* notes */

.notes {
    margin-top: 20px;
    margin-bottom: 10px;
}
.notes-header{
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin-bottom: 10px;
    align-items: center;
}
.note-cards {
    display: flex;
    overflow-x: auto;
    gap: 15px;
    padding-bottom: 10px;
    scrollbar-width: none;
}

.note-card {
    background-color: var(--task-bg);
    border-radius: 10px;
    padding: 12px;
    min-width: 156px;
    color: black;
    height: 100px;
    display: flex;
    flex-direction: column;
    gap: 10px;
    overflow: scroll;
}

/* .add-task {
    background-color: var(--primary);
    color: var(--text-primary);
    border: none;
    border-radius: 8px;
    padding: 10px;
    width: 100%;
    font-size: 15px;
    font-weight: 500;
    margin-top: 20px;
    cursor: pointer;
} */

.add-button {
    display: flex;
    justify-content: center;
    width: 100%;
    height: 50px;
}
.add-task {
    position: fixed;    /* Fixed position to keep it in the same place */
    bottom: 20px;       /* Distance from the bottom of the screen */
    background-color: var(--primary); /* You can customize the button style */
    color: var(--text-primary);
    border: none;
    border-radius: 8px;
    padding: 10px;
    width: 70%;
    max-width: 440px;
    font-size: 15px;
    font-weight: 500;
    cursor: pointer;
    z-index: 1000;     /* Ensures it's always on top of other elements */
}




/* pop up */

/* Blurred background */
.blur-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(217, 217, 217, 0.01);
    backdrop-filter: blur(8.60px);
    z-index: 1010;  /* Should be behind the popup but above other elements */
    display: none;  /* Initially hidden */
    opacity: 0;  /* Start fully transparent */
    transition: opacity 0.4s ease-in-out;  /* Add transition for smooth fade-in/fade-out */
}

.blur-background.show {
    display: block;
    opacity: 1;  /* Make the background visible and fully opaque */
    background: rgba(217, 217, 217, 0.01);
    backdrop-filter: blur(8.60px);
}

/* Popup */
.popup {
    display: none;
    flex-direction: column;
    justify-content: space-between;
    background-color: #1E1E1E;
    border-radius: 10px 10px 0 0;
    padding: 20px;
    width: 100%;
    max-width: 450px;
    height: 500px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    position: fixed;
    margin-left: -11px;
    bottom: -100%; /* Start off-screen */
    z-index: 1020;
    padding-bottom: 40px;
    transition: transform 0.4s ease-in-out, bottom 0.4s ease-in-out; /* Add smooth transition */
}

.popup.show {
    display: flex;
    bottom: 0; /* Slide up into view */
    transform: translateY(0);
    animation: slide-up 0.4s ease-in-out forwards; /* Trigger the slide-up animation */
}

@keyframes slide-up {
    from {
        transform: translateY(100%);
    }
    to {
        transform: translateY(0);
    }
}

.popup h2 {
    color: #FFFFFF;
    text-align: center;
    margin-top: 0;
    margin-bottom: 20px;
    font-size: 18px;
    font-weight: normal;
    margin-top: 10px;
}
#taskForm{
    display: flex;
    flex-direction: column;
    gap: 10px;
}
label {
    display: block;
    color: #FFFFFF;
    margin-bottom: 5px;
    font-size: 16px;
}

.popup input, textarea {
    width: 100%;
    padding: 10px;
    margin-bottom: 15px;
    background-color: #313131;
    border: none;
    border-radius: 5px;
    color: #FFFFFF;
    font-size: 14px;
    resize: none;
}

.popup textarea {
    height: 80px;
    resize: vertical;
}

.popup .date-time {
    display: flex;
    justify-content: space-between;
}

.date-time input {
    width: 100%;
}

.popup .buttons {
    display: flex;
    justify-content: space-between;
    margin-top: 20px;
}

.popup button {
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    font-size: 14px;
    cursor: pointer;
    width: 48%;
}

#cancelBtn {
    background-color: #313131;
    color: #FFFFFF;
}

#createBtn {
    background-color: #3168E0;
    color: #FFFFFF;
}

input::placeholder, textarea::placeholder {
    color: #666666;
}


/* clock container */
.clock-container {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 10px;
    background-color: var(--card-bg);
    border-radius: 10px;
    padding: 20px;
}

.digital-clock {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
}

.digital-clock .time {
    font-size: 3.5rem;
    font-weight: 600;
    color: var(--text-primary);
    font-family: 'Encode Sans', monospace;
    display: flex;
    align-items: center;
}

.digital-clock .time span {
    display: inline-block;
    min-width: 70px;
    text-align: center;
}

.digital-clock .colon {
    animation: blink 1s infinite;
    padding: 0 5px;
    min-width: auto !important;
}

.digital-clock .date {
    font-size: 1rem;
    color: var(--text-secondary);
    text-align: center;
}

@keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
}
.analog-clock {
    width: 200px;
    height: 200px;
    position: relative;
}

.clock-face {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: 2px solid var(--primary);
    position: relative;
    background: var(--card-bg);
}

.hand {
    position: absolute;
    bottom: 50%;
    left: 50%;
    transform-origin: bottom;
    background: var(--text-primary);
    border-radius: 4px;
}

.hour-hand {
    width: 4px;
    height: 30%;
    background: var(--primary);
}

.minute-hand {
    width: 3px;
    height: 40%;
    background: var(--text-primary);
}

.second-hand {
    width: 2px;
    height: 45%;
    background: #ff6b6b;
}

.center-dot {
    position: absolute;
    width: 12px;
    height: 12px;
    background: var(--primary);
    border-radius: 50%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.digital-time {
    position: absolute;
    bottom: 25%;
    left: 50%;
    transform: translateX(-50%);
    font-size: 1.2rem;
    color: var(--text-primary);
    font-family: 'Encode Sans', sans-serif;
}
.clock {
    height: 100px;
    color: white;
    font-size: 60px;
    font-family: sans-serif;
    /* line-height: 20.4vh; */
    display: flex;
    position: relative;
    /*background: green;*/
    overflow: hidden;
  }
  
  .clock::before, .clock::after {
    content: '';
    width: 7ch;
    height: 3vh;
    background: linear-gradient(to top, transparent, var(--card-bg));
    position: absolute;
    z-index: 2;
  }
  
  .clock::after {
    bottom: 0;
    background: linear-gradient(to bottom, transparent, var(--card-bg));
  }
  
  .clock > div {
    display: flex;
    align-items: center;
  }
  
  .tick {
    line-height: 17vh;
  }
  
  .tick-hidden {
    opacity: 0;
  }
  
  .move {
    animation: move linear 1s infinite;
    scroll-behavior: smooth;
  }
  
  @keyframes move {
    from {
      transform: translateY(0vh);
    }
    to {
      transform: translateY(-20vh);
    }
  }
  
  
